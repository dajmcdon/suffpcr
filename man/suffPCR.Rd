% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/suffPCR.R
\name{suffPCR}
\alias{suffPCR}
\title{Sufficient principal component regression}
\source{
See \href{https://github.com/vqv/fps}{Github vqv/fps} for the original
(non-approximate) implementation of fps upon which ours is based along with
the paper \href{https://proceedings.neurips.cc/paper/2013/hash/81e5f81db77c596492e6f1a5a792ed53-Abstract.html}{Fantope Projection and Selection (NeurIPS 2013)}.
}
\usage{
suffPCR(
  X,
  Y,
  family = c("gaussian", "binomial"),
  d = 3,
  n_lambda = 10,
  maxnvar = ncol(X),
  lambda = NULL,
  lambda_max = NULL,
  lambda_min = NULL,
  lambda_seq = c("loglinear", "linear"),
  screening = TRUE
)
}
\arguments{
\item{X}{n by p matrix of features}

\item{Y}{length n response}

\item{family}{optional family argument to implement regression ("gaussian",
the default) or classification ("binomial")}

\item{d}{target PC dimension}

\item{n_lambda}{number of different lambda solutions to examine}

\item{maxnvar}{optional limit on the number of variables to consider}

\item{lambda}{optional vector of lambda values to use in the penalty}

\item{lambda_max}{optional largest value of lambda}

\item{lambda_min}{optional smallest value of lambda, must be non-negative
and less than lambda_max}

\item{lambda_seq}{should lambda be constructed on a loglinear or linear
scale between the minimum and maximum}

\item{screening}{do we screen as in algorithm 2}
}
\value{
an object of class "suffPCR" containing estimated coefficients,
lambda values, the norms of Vhat and a number of additional components.

Both \code{\link[=predict]{predict()}} and \code{\link[=coef]{coef()}} methods are available for accessing.
}
\description{
Estimates principal component regression (or classification) under the
assumption that the loadings are row-sparse. If this assumption is valid,
then the resulting predictors are guaranteed to be irrelevant for predicting
a response variable. This results in a sparse model with sparse linear
combinations of features used for the final prediction
}
\examples{
n <- 100
p <- 50
U <- rnorm(n)
V <- c(rnorm(5), rep(0, p - 5))
V <- V / sqrt(sum(V^2))
bstar <- V * (5 / (5.1))
X <- 5 * tcrossprod(U, V) + 0.1 * matrix(rnorm(n * p), n)
y <- U + rnorm(n)
out <- suffPCR(X, y, d=1:3)
}
